# Generated by Django 3.0.7 on 2020-07-23 05:20

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='comments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('crated', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='following',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('hide_story', models.BooleanField(default=False)),
                ('hide_post', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='images',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='posts')),
            ],
        ),
        migrations.CreateModel(
            name='likes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='posts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(default=datetime.datetime.now)),
                ('last_updated', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.CharField(blank=True, max_length=100, null=True)),
                ('longitude', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=100, null=True)),
                ('views', models.PositiveIntegerField()),
                ('active', models.BooleanField(default=True)),
                ('draft', models.BooleanField(default=False)),
                ('comments', models.ManyToManyField(to='api_v1.comments')),
                ('images', models.ManyToManyField(to='api_v1.posts')),
                ('likes', models.ManyToManyField(to='api_v1.likes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='related_people',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField()),
                ('related_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='stories',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='')),
                ('crated', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('views', models.ManyToManyField(related_name='stories_views', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='user_activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100)),
                ('text', models.CharField(max_length=100)),
                ('activity_user', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='user_details',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('website', models.CharField(blank=True, max_length=100, null=True)),
                ('bio', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True)),
                ('profile_picture', models.ImageField(upload_to='profile_pictures')),
                ('private_account', models.BooleanField(default=True)),
                ('verified', models.BooleanField(default=False)),
                ('blocked_users', models.ManyToManyField(related_name='user_details_blocked_users', to=settings.AUTH_USER_MODEL)),
                ('bookmarked_posts', models.ManyToManyField(related_name='user_details_bookmarked_posts', to='api_v1.posts')),
                ('follow_requests', models.ManyToManyField(related_name='user_details_follow_requests', to=settings.AUTH_USER_MODEL)),
                ('followers', models.ManyToManyField(related_name='user_details_followers', to=settings.AUTH_USER_MODEL)),
                ('following', models.ManyToManyField(to='api_v1.following')),
                ('likes', models.ManyToManyField(to='api_v1.likes')),
                ('posts', models.ManyToManyField(related_name='user_details_posts', to='api_v1.posts')),
                ('related_people', models.ManyToManyField(to='api_v1.related_people')),
                ('stories', models.ManyToManyField(related_name='user_details_stories', to='api_v1.stories')),
                ('story_highlights', models.ManyToManyField(related_name='user_details_story_highlights', to='api_v1.stories')),
                ('tagged_posts', models.ManyToManyField(related_name='user_details_tagged_posts', to='api_v1.posts')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_activity', models.ManyToManyField(to='api_v1.user_activity')),
            ],
        ),
        migrations.CreateModel(
            name='story_highlights',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(max_length=100)),
                ('stories', models.ManyToManyField(to='api_v1.stories')),
            ],
        ),
        migrations.CreateModel(
            name='replies',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=100)),
                ('crated', models.DateTimeField(auto_now_add=True)),
                ('likes', models.ManyToManyField(to='api_v1.likes')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='hashtags',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hashtag', models.CharField(max_length=100)),
                ('crated', models.DateTimeField(auto_now_add=True)),
                ('posts', models.ManyToManyField(to='api_v1.posts')),
                ('stories', models.ManyToManyField(to='api_v1.stories')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comments',
            name='likes',
            field=models.ManyToManyField(to='api_v1.likes'),
        ),
        migrations.AddField(
            model_name='comments',
            name='replies',
            field=models.ManyToManyField(to='api_v1.replies'),
        ),
        migrations.AddField(
            model_name='comments',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
